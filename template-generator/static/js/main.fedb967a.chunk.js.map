{"version":3,"sources":["assets/images/realitio_header_logo.png","assets/images/line_style.png","hooks/useProvider.ts","hooks/useChainId.ts","components/Header/Header.tsx","helpers/reality-eth-contract.ts","components/commons/Box/Box.tsx","components/commons/Spinner/Spinner.tsx","components/Loader/Loader.tsx","components/TemplateBuilder/TemplateBuilderCreate/TemplateBuilderCreate.tsx","hooks/useSigner.ts","components/commons/Select/Select.tsx","assets/icons/copy.svg","components/commons/Input/Input.tsx","components/forms/InstanceForm/InstanceField.tsx","helpers/text.ts","components/commons/Button/Button.tsx","components/commons/LanguageField/LanguageField.tsx","components/forms/DaoModuleTemplateForm/DaoModuleTemplateForm.tsx","components/commons/Textarea/Textarea.tsx","components/forms/CustomTemplateForm/CustomTemplateForm.tsx","components/forms/TemplateForm/TemplateForm.tsx","components/commons/TextBlock/TextBlock.tsx","helpers/validation.ts","components/TemplateBuilder/TemplateBuilderForm/TemplateBuilderForm.tsx","components/TemplateBuilder/TemplateBuilder.tsx","components/TemplateDetails/TemplateDetails.tsx","components/Views.tsx","components/App/App.tsx","index.tsx"],"names":["ethereum","window","getProvider","memoize","ethers","providers","Web3Provider","getDefaultProvider","useProvider","useState","useChainId","provider","network","chainId","setChainId","useEffect","on","Header","label","getChainLabel","className","to","src","Logo","alt","style","backgroundImage","DividerImg","REALITY_ETH_ABI_CONTRACT","getRealityETHContract","address","signer","Contract","Box","title","children","Spinner","Loader","text","realityETHInstance","template","contract","functions","createTemplate","JSON","stringify","request","wait","receipt","newTemplateEvent","events","find","event","Error","args","TemplateBuilderCreate","instance","onClose","onCreate","error","setError","loading","useRef","connected","setConnected","connecting","setConnecting","connect","useCallback","send","useMemo","getSigner","getAddress","then","catch","useSigner","handleError","setTimeout","current","templateId","toNumber","textAlign","Select","value","options","onChange","disabled","props","findIndex","option","index","setIndex","_index","handleSelect","i","parseInt","classNames","getLabel","e","target","map","_path","Input","input","type","_extends","Object","assign","bind","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgCopy","_ref","svgRef","titleId","width","height","viewBox","fill","xmlns","ref","id","fillRule","clipRule","d","ForwardRef","InstanceField","chain_id","tokensDetails","chainTokenList","token","realityETHConfig","filter","getRealityETHInstances","setInstance","custom","setCustom","handleChange","_value","some","handleCustomChange","placeholder","currentTarget","onClick","listener","preventDefault","clipboardData","setData","range","document","createRange","documentSelection","getSelection","selectNodeContents","body","addRange","addEventListener","execCommand","removeEventListener","removeAllRanges","copyTextToClipboard","Button","entries","languages","lan","LanguageField","DaoModuleTemplateForm","ENS","setENS","handleENSChange","validateName","err","validate","category","ens","trim","undefined","Textarea","typeOptions","getTypes","isSelect","isInt","parseOutcomes","split","v","CustomTemplateForm","setType","setCategory","setTitle","outcomes","join","setOutcomes","decimals","setDecimals","field","data","evt","handleCategoryChange","isNaN","handleDecimalsChange","_outcomes","handleOutcomesChange","rows","handleTitleChange","TemplateForm","TextBlock","validateTemplateData","isAddress","templateTypeOptions","TemplateBuilderForm","lang","onSubmit","isValid","TEMPLATE_TYPES","TemplateBuilder","selectedType","useParams","create","setCreate","language","setLanguage","setTemplateId","templateData","setTemplateData","includes","templateType","setTemplateType","TemplateDetails","history","useHistory","currentChainId","setTemplate","_chainId","isCorrectChain","realityInstance","replace","filters","LogNewTemplate","BigNumber","from","queryFilter","question_text","parse","networkLabel","toLowerCase","Views","path","component","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fedb967a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/realitio_header_logo.da16ed6c.png\";","export default __webpack_public_path__ + \"static/media/line_style.d0e8d16f.png\";","import { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport memoize from \"lodash.memoize\";\n\nconst { ethereum } = window as any;\nexport const getProvider = memoize(() => {\n  if (ethereum) {\n    return new ethers.providers.Web3Provider(ethereum, \"any\");\n  }\n  return ethers.getDefaultProvider();\n});\n\nexport const useProvider = () => {\n  const [provider] = useState<\n    ethers.providers.BaseProvider | ethers.providers.Web3Provider\n  >(() => getProvider());\n\n  return provider;\n};\n","import { useEffect, useState } from \"react\";\nimport { useProvider } from \"./useProvider\";\n\nexport function useChainId() {\n  const provider = useProvider();\n  const [chainId, setChainId] = useState<number | undefined>(\n    provider.network?.chainId\n  );\n\n  useEffect(() => {\n    provider.on(\"network\", (network) => {\n      setChainId(network.chainId);\n    });\n  }, [provider]);\n\n  return chainId;\n}\n","import React from \"react\";\nimport \"./Header.css\";\nimport Logo from \"../../assets/images/realitio_header_logo.png\";\nimport DividerImg from \"../../assets/images/line_style.png\";\nimport { useChainId } from \"../../hooks/useChainId\";\nimport { getChainLabel } from \"@reality.eth/contracts\";\n\nimport { Link } from \"react-router-dom\";\n\nexport const Header = () => {\n  const chainId = useChainId();\n  const label = chainId ? getChainLabel(chainId) : \"\";\n\n  return (\n    <div>\n      <header className=\"header-container\">\n        <div className=\"header-logo-container\">\n          <Link to=\"/\">\n            <img src={Logo} alt=\"Logo\" className=\"header-logo\" />\n          </Link>\n          <span className=\"network-text\">{label}</span>\n        </div>\n      </header>\n      <div\n        className=\"divider\"\n        style={{ backgroundImage: `url(${DividerImg})` }}\n      />\n    </div>\n  );\n};\n","import { ethers } from \"ethers\";\n\nconst REALITY_ETH_ABI_CONTRACT = [\n  \"event LogNewTemplate(uint256 indexed template_id, address indexed user, string question_text)\",\n  \"function createTemplate(string content) returns (uint256)\",\n];\n\nexport function getRealityETHContract(\n  address: string,\n  signer: ethers.Signer | ethers.providers.Provider\n) {\n  return new ethers.Contract(address, REALITY_ETH_ABI_CONTRACT, signer);\n}\n\nexport function getRealityETHVersion() {\n  return \"3.0\";\n}\n","import React from \"react\";\nimport \"./Box.css\";\n\nexport interface BoxProps {\n  title?: string;\n}\n\nexport const Box: React.FC<BoxProps> = ({ title, children }) => {\n  return (\n    <div className=\"box\">\n      {title ? (\n        <div className=\"box-title-container\">\n          <h3 className=\"box-title\">{title}</h3>\n        </div>\n      ) : null}\n      <div className=\"box-content\">{children}</div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./Spinner.css\";\n\nexport function Spinner() {\n  return <div className=\"spinner\" />;\n}\n","import React from \"react\";\nimport \"./Loader.css\";\nimport { Spinner } from \"../commons/Spinner/Spinner\";\nimport { Box, BoxProps } from \"../commons/Box/Box\";\n\ninterface LoaderProps {\n  title?: BoxProps[\"title\"];\n  text?: string;\n}\n\nexport const Loader = ({ title, text }: LoaderProps) => {\n  return (\n    <Box title={title}>\n      <div className=\"center-container\">\n        <div className=\"loader-container\">\n          <Spinner />\n          <span>{text}</span>\n        </div>\n      </div>\n    </Box>\n  );\n};\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport \"./TemplateBuilderCreate.css\";\nimport { useSigner } from \"../../../hooks/useSigner\";\nimport { getRealityETHContract } from \"../../../helpers/reality-eth-contract\";\nimport { BigNumber, ethers } from \"ethers\";\nimport { Box } from \"../../commons/Box/Box\";\nimport { TemplateData } from \"../TemplateBuilder\";\nimport { Loader } from \"../../Loader/Loader\";\n\ninterface TemplateBuilderCreateProps {\n  instance: string;\n  template: TemplateData;\n\n  onClose(): void;\n  onCreate(templateId: number): void;\n}\n\nasync function createTemplate(\n  signer: ethers.Signer,\n  realityETHInstance: string,\n  template: TemplateData\n) {\n  const contract = getRealityETHContract(realityETHInstance, signer);\n\n  const request = await contract.functions.createTemplate(\n    JSON.stringify(template)\n  );\n  const receipt = await request.wait();\n\n  const newTemplateEvent = receipt.events.find(\n    (event: any) => event.event === \"LogNewTemplate\"\n  );\n\n  if (!newTemplateEvent) {\n    throw new Error(\"Transaction did not fired the `LogNewTemplate` event.\");\n  }\n\n  return newTemplateEvent.args[0] as BigNumber; // Template Id\n}\n\nexport function TemplateBuilderCreate({\n  instance,\n  template,\n  onClose,\n  onCreate,\n}: TemplateBuilderCreateProps) {\n  const [error, setError] = useState(false);\n  const loading = useRef(false);\n  const { signer, connected, connect } = useSigner();\n\n  const handleError = useCallback(() => {\n    setError(true);\n    setTimeout(onClose, 3000);\n  }, [onClose]);\n\n  useEffect(() => {\n    if (!signer || !connected) {\n      connect().catch(() => handleError());\n      return;\n    }\n\n    if (!loading.current) {\n      loading.current = true;\n      createTemplate(signer, instance, template)\n        .then((templateId) => onCreate(templateId.toNumber()))\n        .catch(() => handleError());\n    }\n  }, [\n    connect,\n    connected,\n    handleError,\n    instance,\n    loading,\n    onCreate,\n    signer,\n    template,\n  ]);\n\n  if (error) {\n    return (\n      <Box title=\"Creating Template...\">\n        <div className=\"center-container\">\n          <h3 style={{ textAlign: \"center\" }}>Transaction Failed</h3>\n        </div>\n      </Box>\n    );\n  }\n\n  return <Loader title=\"Creating Template...\" text=\"Creating Template...\" />;\n}\n","import { useProvider } from \"./useProvider\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { ethers } from \"ethers\";\n\nexport function useSigner() {\n  const provider = useProvider();\n  const [connected, setConnected] = useState(false);\n  const [connecting, setConnecting] = useState(false);\n\n  const connect = useCallback(async () => {\n    if (provider instanceof ethers.providers.Web3Provider) {\n      setConnecting(true);\n      try {\n        await provider.send(\"eth_requestAccounts\", []);\n        setConnected(true);\n      } catch (error) {\n        setConnected(false);\n        throw error;\n      } finally {\n        setConnecting(false);\n      }\n    }\n  }, [provider]);\n\n  const signer = useMemo(() => {\n    if (provider instanceof ethers.providers.Web3Provider) {\n      return provider.getSigner();\n    }\n    return null;\n  }, [provider]);\n\n  useEffect(() => {\n    if (signer) {\n      signer\n        .getAddress()\n        .then(() => setConnected(true))\n        .catch(() => setConnected(false));\n    }\n  }, [signer]);\n\n  return { signer, connected, connect, connecting };\n}\n","import React, { HTMLProps, useEffect, useState } from \"react\";\nimport \"./Select.css\";\nimport classNames from \"classnames\";\n\nexport type Option<T> = { label: string; value: T };\nexport interface SelectProps<T>\n  extends Omit<HTMLProps<HTMLDivElement>, \"value\" | \"onChange\"> {\n  label: string;\n  value?: T;\n  onChange: (value: T) => void;\n  containerProps?: React.HTMLProps<HTMLDivElement>;\n  labelProps?: Omit<React.HTMLProps<HTMLLabelElement>, \"htmlFor\">;\n  options: Option<T>[];\n}\n\nexport function Select<T>({\n  label,\n  value,\n  options,\n  onChange,\n  className,\n  disabled,\n  ...props\n}: SelectProps<T>) {\n  const [index, setIndex] = useState(() =>\n    options.findIndex((option) => option.value === value)\n  );\n\n  useEffect(() => {\n    const _index = options.findIndex((option) => option.value === value);\n    if (index !== _index && value) {\n      setIndex(_index);\n      onChange(value);\n    }\n  }, [index, onChange, options, value]);\n\n  const handleSelect = (index: string) => {\n    const i = parseInt(index);\n    const { value } = options[i];\n    setIndex(i);\n    onChange(value);\n  };\n\n  const getLabel = (index: number) => {\n    const option = options[index];\n    if (!option) return value;\n    return option.label;\n  };\n\n  return (\n    <div\n      {...props}\n      className={classNames(\n        \"custom-select-container\",\n        { \"select-disabled\": disabled },\n        className\n      )}\n    >\n      <span\n        className={classNames(\"custom-select-label\", {\n          \"custom-select-selected\": value,\n        })}\n      >\n        {label}: {value ? getLabel(index) : null}\n      </span>\n      <select\n        disabled={disabled}\n        className=\"custom-select\"\n        value={index}\n        onChange={(e) => handleSelect(e.target.value)}\n      >\n        {options.map((option, index) => (\n          <option key={index} value={index}>\n            {option.label}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n}\n","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgCopy(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M9 6V4.5C9 2.84315 10.3431 1.5 12 1.5H19.5C21.1569 1.5 22.5 2.84315 22.5 4.5V15C22.5 16.6569 21.1569 18 19.5 18H15V19.5C15 21.1569 13.6569 22.5 12 22.5H4.5C2.84315 22.5 1.5 21.1569 1.5 19.5V9C1.5 7.34315 2.84315 6 4.5 6H9ZM15 15H19.5V4.5H12V6C13.6569 6 15 7.34315 15 9V15ZM4.5 19.5V9H12V19.5H4.5Z\",\n    fill: \"#B2B5B2\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCopy);\nexport default __webpack_public_path__ + \"static/media/copy.cb0a413b.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport \"./Input.css\";\nimport classNames from \"classnames\";\n\ninterface InputProps extends React.HTMLProps<HTMLInputElement> {\n  error?: string;\n}\n\nexport const Input = ({\n  className,\n  disabled,\n  label,\n  error,\n  ...props\n}: InputProps) => {\n  const input = (\n    <div\n      className={classNames(\n        \"custom-input\",\n        { \"custom-input-disabled\": disabled, \"input-error\": error },\n        className\n      )}\n    >\n      {label ? <span>{label}:</span> : null}\n      <input type=\"text\" disabled={disabled} {...props} />\n    </div>\n  );\n\n  if (error)\n    return (\n      <>\n        {input}\n        <span className=\"custom-input-error-text\">{error}</span>\n      </>\n    );\n\n  return input;\n};\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { Select } from \"../../commons/Select/Select\";\nimport \"./InstanceField.css\";\nimport { Input } from \"../../commons/Input/Input\";\nimport { chainTokenList, realityETHConfig } from \"@reality.eth/contracts\";\nimport { useChainId } from \"../../../hooks/useChainId\";\nimport { getRealityETHVersion } from \"../../../helpers/reality-eth-contract\";\nimport { ReactComponent as CopyIcon } from \"../../../assets/icons/copy.svg\";\nimport { copyTextToClipboard } from \"../../../helpers/text\";\n\ninterface InstanceFieldProps {\n  disabled?: boolean;\n  value?: string;\n  onChange(address: string): void;\n}\n\nfunction getRealityETHInstances(chain_id: number) {\n  const tokensDetails = chainTokenList(chain_id);\n  const tokens = Object.keys(tokensDetails);\n  return tokens\n    .map((token) => ({\n      ...realityETHConfig(chain_id, token, getRealityETHVersion()),\n      token,\n    }))\n    .filter((token) => token.address);\n}\n\nexport function InstanceField({\n  onChange,\n  value,\n  disabled,\n}: InstanceFieldProps) {\n  const chainId = useChainId();\n\n  const options = useMemo(() => {\n    return getRealityETHInstances(chainId || 1).map((instance) => ({\n      label: `${instance.token} - ${instance.address}`,\n      value: instance.address,\n    }));\n  }, [chainId]);\n\n  const [instance, setInstance] = useState(\n    () => value || (options[0] && options[0].value)\n  );\n  const [custom, setCustom] = useState(!options.length);\n\n  const handleChange = useCallback(\n    (_value: string) => {\n      setInstance(_value);\n      onChange(_value);\n    },\n    [onChange]\n  );\n\n  useEffect(() => {\n    if (options.length) {\n      const exists = options.some((option) => option.value === instance);\n      if (!exists) setInstance(options[0].value);\n    }\n  }, [instance, options]);\n\n  useEffect(() => {\n    if (!value && instance) {\n      onChange(instance);\n    }\n  }, [instance, onChange, value]);\n\n  const handleCustomChange = (custom: boolean) => {\n    setCustom(custom);\n    if (!custom) {\n      setInstance(options[0].value);\n      onChange(options[0].value);\n    }\n  };\n\n  const handleCopyInstance = () => {\n    copyTextToClipboard(instance);\n  };\n\n  if (custom) {\n    return (\n      <div className=\"instance-field\">\n        <Input\n          disabled={disabled}\n          label=\"Reality Instance\"\n          value={value}\n          placeholder=\"Reality.eth Instance Address (0x123...)\"\n          onChange={(event) => handleChange(event.currentTarget.value)}\n        />\n        {disabled ? null : (\n          <button\n            onClick={() => handleCustomChange(false)}\n            className=\"link-button custom-instance-button\"\n          >\n            Use Default Instance\n          </button>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"instance-field\">\n      <Select\n        disabled={disabled}\n        label=\"Reality Instance\"\n        value={instance}\n        onChange={(instance) => handleChange(instance)}\n        options={options}\n      />\n      {disabled ? (\n        <CopyIcon className=\"copy-btn\" onClick={handleCopyInstance} />\n      ) : (\n        <button\n          onClick={() => handleCustomChange(true)}\n          className=\"link-button custom-instance-button\"\n        >\n          Add Custom Instance\n        </button>\n      )}\n    </div>\n  );\n}\n","export function copyTextToClipboard(text: string): void {\n  const listener = (e: ClipboardEvent): void => {\n    e.preventDefault();\n    if (e.clipboardData) {\n      e.clipboardData.setData(\"text/plain\", text);\n    }\n  };\n\n  const range = document.createRange();\n\n  const documentSelection = document.getSelection();\n  if (!documentSelection) {\n    return;\n  }\n\n  range.selectNodeContents(document.body);\n  documentSelection.addRange(range);\n  document.addEventListener(\"copy\", listener);\n  document.execCommand(\"copy\");\n  document.removeEventListener(\"copy\", listener);\n  documentSelection.removeAllRanges();\n}\n","import React from \"react\";\nimport \"./Button.css\";\nimport classNames from \"classnames\";\n\ntype ButtonProps = React.DetailedHTMLProps<\n  React.ButtonHTMLAttributes<HTMLButtonElement>,\n  HTMLButtonElement\n>;\n\nexport const Button = ({ className, ...props }: ButtonProps) => {\n  return <button className={classNames(\"custom-btn\", className)} {...props} />;\n};\n","import React from \"react\";\nimport { Select, SelectProps } from \"../Select/Select\";\nimport languages from \"./languages.json\";\n\nexport type Language = keyof typeof languages;\n\nconst options = Object.entries(languages).map(([lan, name]) => {\n  return {\n    label: name,\n    value: lan as Language,\n  };\n});\n\ntype LanguageFieldProps = Omit<SelectProps<Language>, \"label\" | \"options\">;\n\nexport function LanguageField(props: LanguageFieldProps) {\n  return <Select label=\"Language\" options={options} {...props} />;\n}\n","import React, { useState } from \"react\";\nimport { Input } from \"../../commons/Input/Input\";\nimport { TemplateFormProps } from \"../TemplateForm/TemplateForm\";\nimport { validateName } from \"@ensdomains/ui\";\n\nfunction getTitleForDaoModuleTemplate(ens: string) {\n  return (\n    \"Did the Snapshot proposal with the id %s in the \" +\n    `${ens} space pass the execution of the array of Module transactions ` +\n    \"that have the hash 0x%s and does it meet the requirements of the document \" +\n    `referenced in the dao requirements record at ${ens}? The hash is ` +\n    \"the keccak of the concatenation of the individual EIP-712 hashes of \" +\n    \"the Module transactions. If this question was asked before the corresponding \" +\n    \"Snapshot proposal was resolved, it should ALWAYS be resolved to INVALID!\"\n  );\n}\n\nfunction validate(value: string) {\n  try {\n    return validateName(value).length;\n  } catch (err) {\n    return false;\n  }\n}\n\nexport const DaoModuleTemplateForm = ({\n  onChange,\n  disabled,\n}: TemplateFormProps) => {\n  const [ENS, setENS] = useState<string>(\"\");\n  const [error, setError] = useState(false);\n\n  const handleENSChange = (value: string) => {\n    setENS(value);\n    if (!value) {\n      onChange(undefined);\n      setError(false);\n      return;\n    }\n    if (!validate(value)) {\n      onChange(undefined);\n      setError(true);\n      return;\n    }\n    setError(false);\n    onChange({\n      type: \"bool\",\n      category: \"DAO proposal\",\n      title: getTitleForDaoModuleTemplate(value.trim()),\n    });\n  };\n\n  return (\n    <Input\n      disabled={disabled}\n      value={ENS}\n      error={error ? \"Invalid ENS\" : \"\"}\n      className={\"input-space\"}\n      placeholder=\"ENS Name\"\n      onChange={(event) => handleENSChange(event.currentTarget.value)}\n    />\n  );\n};\n","import React from \"react\";\nimport \"./Textarea.css\";\n\nexport const Textarea = ({\n  className,\n  ...props\n}: React.HTMLProps<HTMLTextAreaElement>) => {\n  return <textarea {...props} className={`custom-textarea ${className}`} />;\n};\n","import React, { useState } from \"react\";\nimport { Option, Select } from \"../../commons/Select/Select\";\nimport { Textarea } from \"../../commons/Textarea/Textarea\";\nimport { TemplateData, Type } from \"../../TemplateBuilder/TemplateBuilder\";\nimport { TemplateFormProps } from \"../TemplateForm/TemplateForm\";\nimport { Input } from \"../../commons/Input/Input\";\n\nconst typeOptions: Option<Type>[] = [\n  { value: \"bool\", label: \"Bool\" },\n  { value: \"uint\", label: \"Uint\" },\n  { value: \"datetime\", label: \"Date/Time\" },\n  { value: \"single-select\", label: \"Single Select\" },\n  { value: \"multiple-select\", label: \"Multiple Select\" },\n];\n\ntype PartialTemplateData = Omit<TemplateData, \"lang\">;\n\nexport function getTypes(type: string) {\n  return {\n    isSelect: type === \"single-select\" || type === \"multiple-select\",\n    isInt: type === \"uint\",\n  };\n}\n\nfunction parseOutcomes(value: string): string[] {\n  return value.trim()\n    ? value\n        .split(\",\")\n        .map((v) => v.trim())\n        .filter((v) => v)\n    : [];\n}\n\nexport const CustomTemplateForm = ({\n  onChange,\n  disabled,\n  template,\n}: TemplateFormProps) => {\n  const [type, setType] = useState<Type>(template?.type || \"bool\");\n  const [category, setCategory] = useState(template?.category || \"\");\n  const [title, setTitle] = useState(template?.title || \"\");\n  const [outcomes, setOutcomes] = useState<string>(\n    template?.outcomes?.join(\",\") || \"\"\n  );\n  const [decimals, setDecimals] = useState<number>(template?.decimals || 18);\n\n  const handleChange = (field: keyof PartialTemplateData, value: any) => {\n    const _type = field === \"type\" ? value : type;\n    const { isInt, isSelect } = getTypes(_type);\n\n    const data: PartialTemplateData = {\n      ...template,\n      type,\n      category,\n      title,\n      outcomes: isSelect ? parseOutcomes(outcomes) : undefined,\n      decimals: isInt ? decimals : undefined,\n      [field]: value,\n    };\n    onChange(data);\n  };\n\n  const handleCategoryChange = (category: string) => {\n    setCategory(category);\n    handleChange(\"category\", category);\n  };\n\n  const handleTypeChange = (type: Type) => {\n    setType(type);\n    handleChange(\"type\", type);\n  };\n\n  const handleTitleChange = (title: string) => {\n    setTitle(title);\n    handleChange(\"title\", title);\n  };\n\n  const handleDecimalsChange = (value: string) => {\n    const decimals = parseInt(value);\n    if (isNaN(decimals)) return;\n    setDecimals(decimals);\n    handleChange(\"decimals\", decimals);\n  };\n\n  const handleOutcomesChange = (value: string) => {\n    setOutcomes(value);\n    const _outcomes = parseOutcomes(value);\n    handleChange(\"outcomes\", _outcomes);\n  };\n\n  const { isInt, isSelect } = getTypes(type);\n\n  return (\n    <>\n      <Input\n        disabled={disabled}\n        label=\"Category\"\n        value={category}\n        onChange={(evt) => handleCategoryChange(evt.currentTarget.value)}\n        className=\"input-space\"\n      />\n      <Select\n        disabled={disabled}\n        label=\"Type\"\n        value={type}\n        onChange={handleTypeChange}\n        options={typeOptions}\n        className=\"input-space\"\n      />\n\n      {isInt ? (\n        <Input\n          disabled={disabled}\n          label=\"Decimals\"\n          value={decimals}\n          onChange={(evt) => handleDecimalsChange(evt.currentTarget.value)}\n          className=\"input-space\"\n        />\n      ) : null}\n      {isSelect ? (\n        <Input\n          disabled={disabled}\n          label=\"Outcomes\"\n          value={outcomes}\n          onChange={(evt) => handleOutcomesChange(evt.currentTarget.value)}\n          className=\"input-space\"\n        />\n      ) : null}\n\n      <Textarea\n        disabled={disabled}\n        value={title}\n        rows={5}\n        className=\"input-space\"\n        placeholder=\"Did the Olympian with the name %s win gold?\"\n        onChange={(evt) => handleTitleChange(evt.currentTarget.value)}\n      />\n    </>\n  );\n};\n","import React from \"react\";\nimport {\n  TemplateData,\n  TemplateType,\n} from \"../../TemplateBuilder/TemplateBuilder\";\nimport { DaoModuleTemplateForm } from \"../DaoModuleTemplateForm/DaoModuleTemplateForm\";\nimport { CustomTemplateForm } from \"../CustomTemplateForm/CustomTemplateForm\";\n\nexport interface TemplateFormProps {\n  disabled?: boolean;\n  type: TemplateType;\n  template?: TemplateData;\n  onChange(form?: Omit<TemplateData, \"lang\">): void;\n}\n\nexport function TemplateForm(props: TemplateFormProps) {\n  if (props.type === \"reality\") return <DaoModuleTemplateForm {...props} />;\n\n  return <CustomTemplateForm {...props} />;\n}\n","import React from \"react\";\nimport \"./TextBlock.css\";\nimport classNames from \"classnames\";\nimport { HTMLProps } from \"react\";\n\ntype TextBlockProps = HTMLProps<HTMLDivElement>;\n\nexport function TextBlock({ className, ...props }: TextBlockProps) {\n  return <div className={classNames(\"text-block\", className)} {...props} />;\n}\n","import { TemplateData } from \"../components/TemplateBuilder/TemplateBuilder\";\nimport { isAddress } from \"ethers/lib/utils\";\nimport { getTypes } from \"../components/forms/CustomTemplateForm/CustomTemplateForm\";\n\nexport function validateTemplateData(\n  instance?: string,\n  template?: TemplateData\n): boolean {\n  if (\n    !(\n      instance &&\n      isAddress(instance) &&\n      template &&\n      template.type &&\n      template.category &&\n      template.title\n    )\n  )\n    return false;\n\n  const { isInt, isSelect } = getTypes(template.type);\n\n  if (isInt) {\n    return !!(template?.decimals && !isNaN(template.decimals));\n  }\n\n  if (isSelect) {\n    return !!template?.outcomes?.length;\n  }\n\n  return true;\n}\n","import React, { useCallback } from \"react\";\nimport { Box } from \"../../commons/Box/Box\";\nimport \"./TemplateBuilderForm.css\";\nimport { Option, Select } from \"../../commons/Select/Select\";\nimport { InstanceField } from \"../../forms/InstanceForm/InstanceField\";\nimport { Button } from \"../../commons/Button/Button\";\nimport {\n  Language,\n  LanguageField,\n} from \"../../commons/LanguageField/LanguageField\";\nimport { TemplateForm } from \"../../forms/TemplateForm/TemplateForm\";\nimport { TextBlock } from \"../../commons/TextBlock/TextBlock\";\nimport { TemplateData, TemplateType } from \"../TemplateBuilder\";\nimport { validateTemplateData } from \"../../../helpers/validation\";\n\nexport type TemplateBuilderFormFields =\n  | \"instance\"\n  | \"language\"\n  | \"type\"\n  | \"template\";\n\nconst templateTypeOptions: Option<TemplateType>[] = [\n  { label: \"Custom\", value: \"custom\" },\n  { label: \"Zodiac Reality Module\", value: \"reality\" },\n];\n\ninterface TemplateBuilderFormProps {\n  id?: number;\n  lang?: Language;\n  instance?: string;\n  template?: TemplateData;\n  type?: TemplateType;\n\n  onChange?(field: TemplateBuilderFormFields, value: any): void;\n  onSubmit?(): void;\n}\n\nexport const TemplateBuilderForm = ({\n  id,\n  lang,\n  type = \"custom\",\n  instance,\n  template,\n  onChange,\n  onSubmit,\n}: TemplateBuilderFormProps) => {\n  const disabled = id !== undefined;\n  const title = disabled ? `Template: ${id}` : \"Template Builder\";\n  const isValid = validateTemplateData(instance, template);\n\n  const handleChange = useCallback(\n    (field: TemplateBuilderFormFields) => (value: any) => {\n      if (onChange) onChange(field, value);\n    },\n    [onChange]\n  );\n\n  return (\n    <Box title={title}>\n      <div className=\"template-builder-content\">\n        <InstanceField\n          disabled={disabled}\n          value={instance}\n          onChange={handleChange(\"instance\")}\n        />\n        <Select\n          disabled={disabled}\n          label=\"Template Type\"\n          value={type}\n          onChange={handleChange(\"type\")}\n          options={templateTypeOptions}\n          className=\"input-space\"\n        />\n\n        <LanguageField\n          disabled={disabled}\n          value={lang || template?.lang}\n          onChange={handleChange(\"language\")}\n          className=\"input-space\"\n        />\n\n        <TemplateForm\n          disabled={disabled}\n          type={type}\n          template={template}\n          onChange={handleChange(\"template\")}\n        />\n\n        {template && isValid ? (\n          <TextBlock className=\"input-space\">\n            {JSON.stringify(template, undefined, 4)}\n          </TextBlock>\n        ) : null}\n\n        {disabled ? null : (\n          <Button\n            disabled={!isValid}\n            onClick={onSubmit}\n            className=\"input-space\"\n          >\n            Create Template\n          </Button>\n        )}\n      </div>\n    </Box>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Language } from \"../commons/LanguageField/LanguageField\";\nimport { base_ids } from \"@reality.eth/contracts/config/templates.json\";\nimport { TemplateBuilderCreate } from \"./TemplateBuilderCreate/TemplateBuilderCreate\";\nimport {\n  TemplateBuilderForm,\n  TemplateBuilderFormFields,\n} from \"./TemplateBuilderForm/TemplateBuilderForm\";\nimport { validateTemplateData } from \"../../helpers/validation\";\nimport { useParams } from \"react-router-dom\";\n\nexport type TemplateType = \"custom\" | \"reality\";\nexport const TEMPLATE_TYPES: TemplateType[] = [\"custom\", \"reality\"];\n\nexport type Type = keyof typeof base_ids;\n\nexport interface TemplateData {\n  type: Type;\n  title: string;\n  category: string;\n  lang: Language;\n\n  decimals?: number;\n  outcomes?: string[];\n}\n\nfunction isTemplateType(type: string): type is TemplateType {\n  return TEMPLATE_TYPES.includes(type as TemplateType);\n}\n\nexport const TemplateBuilder = () => {\n  const { type: selectedType } = useParams<{ type: string }>();\n\n  const [create, setCreate] = useState(false);\n  const [instance, setInstance] = useState<string>();\n  const [language, setLanguage] = useState<Language>(\"en\");\n  const [templateId, setTemplateId] = useState<number>();\n  const [templateData, setTemplateData] = useState<TemplateData>();\n  const [templateType, setTemplateType] = useState<TemplateType>(() => {\n    if (selectedType && isTemplateType(selectedType)) return selectedType;\n    return \"custom\";\n  });\n\n  const handleFormData = (data?: Omit<TemplateData, \"lang\">) => {\n    if (!data) {\n      setTemplateData(undefined);\n      return;\n    }\n    setTemplateData({ lang: language, ...data });\n  };\n  const handleClose = () => {\n    setCreate(false);\n    setTemplateData(undefined);\n  };\n  const handleCreation = (templateId: number) => {\n    setTemplateType(\"custom\");\n    setTemplateId(templateId);\n  };\n  const handleSubmit = () => {\n    if (!validateTemplateData(instance, templateData)) {\n      return;\n    }\n    setCreate(true);\n  };\n\n  const handleChange = (field: TemplateBuilderFormFields, value: any) => {\n    switch (field) {\n      case \"instance\":\n        setInstance(value);\n        break;\n      case \"type\":\n        setTemplateType(value);\n        setTemplateData(undefined);\n        break;\n      case \"language\":\n        setLanguage(value);\n        if (templateData) {\n          const template = { ...templateData };\n          template.lang = value; // Avoid changing fields order.\n          setTemplateData(template);\n        }\n        break;\n      case \"template\":\n        handleFormData(value);\n        break;\n    }\n  };\n\n  if (instance && templateData && create && !templateId) {\n    return (\n      <TemplateBuilderCreate\n        instance={instance}\n        template={templateData}\n        onClose={handleClose}\n        onCreate={handleCreation}\n      />\n    );\n  }\n\n  return (\n    <TemplateBuilderForm\n      id={templateId}\n      lang={language}\n      type={templateType}\n      instance={instance}\n      template={templateData}\n      onSubmit={handleSubmit}\n      onChange={handleChange}\n    />\n  );\n};\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { realityETHConfig, getChainLabel } from \"@reality.eth/contracts\";\nimport { Loader } from \"../Loader/Loader\";\nimport { useChainId } from \"../../hooks/useChainId\";\nimport {\n  getRealityETHContract,\n  getRealityETHVersion,\n} from \"../../helpers/reality-eth-contract\";\nimport { useProvider } from \"../../hooks/useProvider\";\nimport { BigNumber } from \"ethers\";\nimport { TemplateData } from \"../TemplateBuilder/TemplateBuilder\";\nimport { TemplateBuilderForm } from \"../TemplateBuilder/TemplateBuilderForm/TemplateBuilderForm\";\n\ninterface TemplateDetailsParams {\n  id: string;\n  chainId: string;\n  token: string;\n}\n\nexport function TemplateDetails() {\n  const history = useHistory();\n  const provider = useProvider();\n  const currentChainId = useChainId();\n  const [template, setTemplate] = useState<TemplateData>();\n\n  const { id, token, chainId: _chainId } = useParams<TemplateDetailsParams>();\n  const chainId = parseInt(_chainId);\n\n  const isCorrectChain = chainId === currentChainId;\n\n  const realityInstance = useMemo(() => {\n    try {\n      return realityETHConfig(chainId, token, getRealityETHVersion());\n    } catch (err) {\n      return undefined;\n    }\n  }, [chainId, token]);\n\n  useEffect(() => {\n    if (isNaN(parseInt(id)) || !realityInstance) {\n      history.replace(\"/\");\n    }\n  }, [history, id, realityInstance]);\n\n  useEffect(() => {\n    if (isCorrectChain && realityInstance) {\n      const contract = getRealityETHContract(realityInstance.address, provider);\n      const filters = contract.filters.LogNewTemplate(BigNumber.from(id));\n      contract\n        .queryFilter(filters)\n        .then((events) => {\n          if (!events.length) {\n            history.replace(\"/\");\n            return;\n          }\n          let { question_text } = events[0].args as any;\n          question_text = question_text.replace(\n            '\"outcomes\": [%s]',\n            '\"outcomes\": [\"%s\"]'\n          ); // Special Case for Default Cases\n          const template = JSON.parse(question_text) as TemplateData;\n          setTemplate(template);\n        })\n        .catch(() => history.replace(\"/\"));\n    }\n  }, [\n    id,\n    history,\n    chainId,\n    provider,\n    currentChainId,\n    isCorrectChain,\n    realityInstance,\n  ]);\n\n  if (!isCorrectChain) {\n    const networkLabel = getChainLabel(chainId).toLowerCase();\n    return (\n      <Loader\n        text={`Please change your current network to the ${networkLabel}`}\n      />\n    );\n  }\n\n  if (template) {\n    return <TemplateBuilderForm id={parseInt(id)} template={template} />;\n  }\n\n  return <Loader />;\n}\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { TemplateBuilder } from \"./TemplateBuilder/TemplateBuilder\";\nimport { TemplateDetails } from \"./TemplateDetails/TemplateDetails\";\n\nexport function Views() {\n  return (\n    <Switch>\n      <Route path=\"/template/:chainId/:token/:id\" component={TemplateDetails} />\n      <Route path=\"/type/:type\" component={TemplateBuilder} />\n      <Route path=\"/\" component={TemplateBuilder} />\n    </Switch>\n  );\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport { Header } from \"../Header/Header\";\nimport { Views } from \"../Views\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"app-container\">\n        <Header />\n        <Views />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}