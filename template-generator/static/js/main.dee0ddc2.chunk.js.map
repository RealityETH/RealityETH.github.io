{"version":3,"sources":["../../contracts/index.js","assets/images/realitio_header_logo.png","assets/images/line_style.png","hooks/useProvider.ts","hooks/useChainId.ts","helpers/network.ts","components/Header/Header.tsx","helpers/reality-eth-contract.ts","components/commons/Box/Box.tsx","components/commons/Spinner/Spinner.tsx","components/Loader/Loader.tsx","components/TemplateBuilder/TemplateBuilderCreate/TemplateBuilderCreate.tsx","hooks/useSigner.ts","components/commons/Select/Select.tsx","assets/icons/copy.svg","components/commons/Input/Input.tsx","components/forms/InstanceForm/InstanceField.tsx","helpers/text.ts","components/commons/Button/Button.tsx","components/commons/LanguageField/LanguageField.tsx","components/forms/DaoModuleTemplateForm/DaoModuleTemplateForm.tsx","components/commons/Textarea/Textarea.tsx","components/forms/CustomTemplateForm/CustomTemplateForm.tsx","components/forms/TemplateForm/TemplateForm.tsx","components/commons/TextBlock/TextBlock.tsx","helpers/validation.ts","components/TemplateBuilder/TemplateBuilderForm/TemplateBuilderForm.tsx","components/TemplateBuilder/TemplateBuilder.tsx","components/TemplateDetails/TemplateDetails.tsx","components/Views.tsx","components/App/App.tsx","index.tsx"],"names":["all_config","require","token_info","chain_info","template_config","factory_config","chainTokenList","chain_id","ret","t","is_native","native_chains","factoryConfigForAddress","address","cid","ver","config","toLowerCase","configForAddress","addr","ticker","arbitrators","split","contract_name","contract_version","version_number","tokenAndContractConfigFromFactory","factory_data","factory","template_orig","library_address","template","k","console","log","realityETH","block","parseInt","createdBlock","token_address","token_ticker","token_symbol","erc20_chains_val","token_decimals","module","exports","realityETHConfig","token","version","versions","i","length","Error","realityETHConfigs","configs","is_latest_found","is_latest","realityETHInstance","arbitratorInstance","erc20Instance","abi","tokenConfig","erc20_chains","chainData","walletAddParameters","params","item","templateConfig","defaultTokenForChain","versionHasFeature","vernum","feature_name","bits","isChainSupported","factoryList","populateImports","imported_contracts","ctr","to_imp","imp","contract","ethereum","window","getProvider","memoize","ethers","providers","Web3Provider","getDefaultProvider","useProvider","useState","useChainId","provider","network","chainId","setChainId","useEffect","on","labels","getNetworkLabel","Header","label","className","to","src","Logo","alt","style","backgroundImage","DividerImg","REALITY_ETH_ABI_CONTRACT","getRealityETHContract","signer","Contract","Box","title","children","Spinner","Loader","text","a","functions","createTemplate","JSON","stringify","request","wait","receipt","newTemplateEvent","events","find","event","args","TemplateBuilderCreate","instance","onClose","onCreate","error","setError","loading","useRef","connected","setConnected","connecting","setConnecting","connect","useCallback","send","useMemo","getSigner","getAddress","then","catch","useSigner","handleError","setTimeout","current","templateId","toNumber","textAlign","Select","value","options","onChange","disabled","props","findIndex","option","index","setIndex","_index","handleSelect","classNames","getLabel","e","target","map","_path","Input","input","type","_extends","Object","assign","bind","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgCopy","_ref","svgRef","titleId","width","height","viewBox","fill","xmlns","ref","id","fillRule","clipRule","d","ForwardRef","InstanceField","tokensDetails","filter","getRealityETHInstances","setInstance","custom","setCustom","handleChange","_value","some","handleCustomChange","placeholder","currentTarget","onClick","listener","preventDefault","clipboardData","setData","range","document","createRange","documentSelection","getSelection","selectNodeContents","body","addRange","addEventListener","execCommand","removeEventListener","removeAllRanges","copyTextToClipboard","Button","entries","languages","lan","LanguageField","DaoModuleTemplateForm","ENS","setENS","handleENSChange","validateName","err","validate","category","ens","trim","undefined","Textarea","typeOptions","getTypes","isSelect","isInt","parseOutcomes","v","CustomTemplateForm","setType","setCategory","setTitle","outcomes","join","setOutcomes","decimals","setDecimals","field","data","evt","handleCategoryChange","isNaN","handleDecimalsChange","_outcomes","handleOutcomesChange","rows","handleTitleChange","TemplateForm","TextBlock","validateTemplateData","isAddress","templateTypeOptions","TemplateBuilderForm","lang","onSubmit","isValid","TEMPLATE_TYPES","TemplateBuilder","selectedType","useParams","create","setCreate","language","setLanguage","setTemplateId","templateData","setTemplateData","includes","templateType","setTemplateType","TemplateDetails","history","useHistory","currentChainId","setTemplate","_chainId","isCorrectChain","realityInstance","replace","filters","LogNewTemplate","BigNumber","from","queryFilter","question_text","parse","networkLabel","Views","path","component","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.dee0ddc2.chunk.js","sourcesContent":["let all_config = require('./generated/contracts.json');\nlet token_info = require('./generated/tokens.json');\nconst chain_info = require('./generated/chains.json');\nconst template_config = require('./config/templates.json');\nconst factory_config = require('./generated/factories.json');\n\nfunction populateImports(imported_contracts, chain_id) {\n    for(var ctr in imported_contracts) {\n        let to_imp = imported_contracts[ctr];\n        to_imp.realityETH= ctr; \n        const imp = tokenAndContractConfigFromFactory(to_imp, chain_id); \n        const token = imp.token.ticker;\n        if (!all_config[chain_id][token]) {\n            all_config[chain_id][token] = {};\n        }\n        const ver = imp.contract.version_number;\n        all_config[chain_id][token][ver] = imp.contract;\n\n        if (!token_info[token]) {\n            token_info[token] = imp.token;\n        }\n    }\n}\n\nfunction realityETHInstance(config) {\n    const abis = {\n        'RealityETH-2.0': require('./abi/solc-0.8.6/RealityETH-2.0.abi.json'), \n        'RealityETH-2.1': require('./abi/solc-0.8.6/RealityETH-2.1.abi.json'),\n        'RealityETH-2.1-rc1': require('./abi/solc-0.8.6/RealityETH-2.1.abi.json'),\n        'RealityETH-3.0': require('./abi/solc-0.8.6/RealityETH-3.0.abi.json'),\n        'RealityETH_ERC20-2.0': require('./abi/solc-0.8.6/RealityETH_ERC20-2.0.abi.json'),\n        'RealityETH_ERC20-3.0': require('./abi/solc-0.8.6/RealityETH_ERC20-3.0.abi.json')\n    }\n    return {\n        \"abi\": abis[config.contract_version],\n        \"contractName\": config.contract_name,\n        //\"bytecode\": bytecode,\n        \"address\": config.address,\n        \"chain_id\": config.chain_id\n    };\n    \n}\n\n// TODO: Rename to clarify that there's no address\nfunction arbitratorInstance(chain_id) {\n    const abi = require('./abi/solc-0.4.25/Arbitrator.abi.json');\n    return {\n        \"abi\": abi,\n        \"contractName\": 'Arbitrator',\n        \"chain_id\": chain_id\n    };\n}\n\nfunction erc20Instance(config) {\n    const abi = require('./abi/solc-0.4.25/ERC20.abi.json');\n    if (!config.token_address) {\n        // console.log('config', config);\n        throw new Error(\"token address for erc20 instance not found\");\n        return null;\n    }\n    return {\n        \"abi\": abi,\n        \"contractName\": 'ERC20',\n        \"address\": config.token_address,\n        \"chain_id\": config.chain_id\n    };\n}\n\nfunction chainTokenList(chain_id) {\n    let ret = {};\n    for (t in token_info) {\n        if (all_config[\"\"+chain_id] && all_config[\"\"+chain_id][t]) {\n            ret[t] = token_info[t];\n            ret[t].is_native = (token_info[t].native_chains && token_info[t].native_chains[\"\"+chain_id]);\n        }\n    }\n    return ret;\n}\n\nfunction tokenConfig(token, chain_id) {\n    const t = token_info[token];\n    if (!t) {\n        console.log('token not found in token_info');\n        return null;\n    }\n    if (t.native_chains && t.native_chains[chain_id+\"\"]) {\n        t.is_native = true;\n        return t;\n    }\n    if (t.erc20_chains && t.erc20_chains[chain_id+\"\"]) {\n        t.address = t.erc20_chains[chain_id+\"\"];\n        t.is_native = false;\n        return t;\n    }\n    console.log(\"Token config not found for chain\");\n    return null;\n}\n\nfunction realityETHConfig(chain_id, token, version) {\n    const versions = ['3.0', '2.1', '2.1-rc1', '2.0'];\n    const token_info = chainTokenList(chain_id);\n    if (!token_info[token]) {\n        console.log(\"Token not found for chain\");\n        return null;\n        //throw new Error(\"Token not found for chain\");\n    }\n    const contract_name = token_info[token].is_native ? 'RealityETH' : 'RealityETH_ERC20';\n    // If no version specified, crawl for the latest\n    if (version == null) {\n        for (let i=0; i<versions.length; i++) {\n            if (all_config[\"\"+chain_id][token][contract_name + '-' + versions[i]]) {\n                version = versions[i];\n                break;\n            }\n        }\n        if (!version) {\n            throw new Error(\"Could not find any version for \"+chain_id + \"/\" + token + \"/\" + contract_name);\n        } \n    }\n    //const configf = './networks/'+chain_id+'/'+token+'/'+contract_name+'-'+version+'.json';\n    const contract_version = contract_name + '-' + version;\n    const config = all_config[\"\"+chain_id][token][contract_version];\n    if (!config) {\n        console.log(\"Could not find config for \"+chain_id + \"/\" + token + \"/\" + contract_version);\n        return null;\n        //throw new Error(\"Could not find config for \"+chain_id + \"/\" + token + \"/\" + contract_version);\n    }\n    if (!config.arbitrators) {\n        config.arbitrators = [];\n    }\n    config.version_number = version;\n    config.chain_id = chain_id;\n    config.contract_name = contract_name;\n    config.contract_version = contract_version;\n    return config;\n}\n\nfunction realityETHConfigs(chain_id, token) {\n    let configs = {};\n    const versions = ['3.0', '2.1', '2.1-rc1', '2.0'];\n    const token_info = chainTokenList(chain_id);\n    if (!token_info[token]) {\n        console.log(\"Token not found for network\");\n        return null;\n        //throw new Error(\"Token not found for network\");\n    }\n    const contract_name = token_info[token].is_native ? 'RealityETH' : 'RealityETH_ERC20';\n    // If no version specified, crawl for the latest\n    let is_latest_found = false;\n    for (let i=0; i<versions.length; i++) {\n        if (all_config[\"\"+chain_id][token][contract_name + '-' + versions[i]]) {\n            const version = versions[i];\n            //const configf = './networks/'+network_id+'/'+token+'/'+contract_name+'-'+version+'.json';\n            const contract_version = contract_name + '-' + version;\n            const config = all_config[\"\"+chain_id][token][contract_version];\n            if (!config) {\n                console.log(\"Could not find config for \"+chain_id+ \"/\" + token + \"/\" + contract_version);\n                return null;\n                //throw new Error(\"Could not find config for \"+network_id + \"/\" + token + \"/\" + contract_version);\n            }\n            if (!config.arbitrators) {\n                config.arbitrators = [];\n            }\n            config.version_number = version;\n            config.chain_id = chain_id;\n            config.contract_name = contract_name;\n            config.contract_version = contract_version;\n            config.is_latest = !is_latest_found;\n            configs[config.address] = config;\n            is_latest_found = true;\n        }\n    }\n    return configs;\n}\n\nfunction chainData(chain_id) {\n    return chain_info[\"\"+chain_id];\n}\n\nfunction isChainSupported(chain_id) {\n    return (\"\"+chain_id in chain_info);\n}\n\nfunction walletAddParameters(chain_id) {\n    var params = ['chainId', 'chainName', 'nativeCurrency', 'rpcUrls', 'blockExplorerUrls']\n    var ret = {};\n    // console.log('looking for config for chain', chain_id);\n    var config = chain_info[\"\"+chain_id];\n    for (var i=0; i<params.length; i++) {\n        var item = params[i];\n        ret[item] = config[item];\n    }\n    return ret; \n}\n\nfunction templateConfig() {\n    return template_config;\n}\n\nfunction defaultTokenForChain(chain_id) {\n    // Use the native token if we have one\n    // If not, use the first one\n    const config = all_config[\"\"+chain_id];\n    var ret = null;\n    for (var token in config) {\n        var token_info = chainTokenList(chain_id);\n        if (!token_info) {\n            continue;\n        }\n        if (token_info[token].is_native) {\n            return token;\n        }\n        if (!ret) {\n            ret = token;\n        }\n    }\n    return ret;\n}\n\nfunction versionHasFeature(vernum, feature_name) {\n    if (feature_name == 'min-bond' || feature_name == 'reopen-question') {\n        const min_maj = 3;\n        const bits = vernum+\"\".split('.');    \n        const maj = parseInt(bits[0]);\n        return (maj >= min_maj);\n    } else {\n        throw new Error('Feature not known: '+feature_name);\n    }\n}\n\nfunction factoryConfigForAddress(address, chain_id) {\n\n    for(var cid in factory_config) {\n        if (chain_id && cid != chain_id) {\n            continue;\n        }\n        for(var ver in factory_config[cid]) {\n            const config = factory_config[cid][ver];\n            if (address.toLowerCase() == config.address.toLowerCase()) {\n                return config;\n            }\n        }\n    }\n    return null;\n\n}\n\nfunction configForAddress(addr, chain_id) {\n    for(var cid in all_config) {\n        if (chain_id && cid != chain_id) {\n            continue;\n        }\n        for(var ticker in all_config[cid]) {\n            for(var ver in all_config[cid][ticker]) {\n                const config = all_config[cid][ticker][ver];\n                if (addr.toLowerCase() == config.address.toLowerCase()) {\n                    if (!config.arbitrators) {\n                        config.arbitrators = [];\n                    }\n                    const [contract_name, contract_version] = ver.split('-');\n                    config.version_number = ver;\n                    config.chain_id = cid;\n                    config.contract_name = contract_name;\n                    config.contract_version = contract_version;\n                    return config;\n                }\n            }\n        }\n    }\n    return null;\n\n}\n\nfunction factoryList(chain_id) {\n    if (!factory_config[chain_id]) {\n        return {};\n    }\n    return factory_config[chain_id];\n}\n\nfunction tokenAndContractConfigFromFactory(factory_data, chain_id) {\n    // Get the library for the factory\n    const factory_config = factoryConfigForAddress(factory_data.factory, chain_id);\n\n    const template_orig = configForAddress(factory_config.library_address, chain_id);\n    let template = {};\n    for (let k in template_orig) {\n      template[k] = template_orig[k];\n    }\n\n    if (!template) {\n        console.log('no template found for', factory_data, factory_config, chain_id);\n        return null;\n    }\n\n    template.address = factory_data.realityETH;\n    template.block = parseInt(factory_data.createdBlock);\n    template.token_address = factory_data.token_address;\n    template.token_ticker = factory_data.token_symbol;\n\n    const erc20_chains_val = {};\n    erc20_chains_val[chain_id] = factory_data.token_address;\n\n    return {\n        'token': {\n            'ticker': factory_data.token_symbol,\n            'decimals': factory_data.token_decimals,\n            'is_native': false,\n            'small_number': 1000000000000000000,\n            'erc20_chains': erc20_chains_val\n        },\n        'contract': template\n    }\n        \n}\n\n\nmodule.exports.realityETHConfig = realityETHConfig;\nmodule.exports.realityETHConfigs = realityETHConfigs;\nmodule.exports.realityETHInstance = realityETHInstance;\nmodule.exports.arbitratorInstance = arbitratorInstance;\nmodule.exports.erc20Instance = erc20Instance;\nmodule.exports.chainTokenList = chainTokenList;\nmodule.exports.tokenConfig = tokenConfig\nmodule.exports.chainData = chainData;\nmodule.exports.walletAddParameters = walletAddParameters;\nmodule.exports.templateConfig = templateConfig;\nmodule.exports.defaultTokenForChain = defaultTokenForChain;\nmodule.exports.versionHasFeature = versionHasFeature;\nmodule.exports.isChainSupported = isChainSupported;\nmodule.exports.factoryList = factoryList;\nmodule.exports.tokenAndContractConfigFromFactory = tokenAndContractConfigFromFactory;\nmodule.exports.configForAddress = configForAddress;\nmodule.exports.populateImports = populateImports;\n","export default __webpack_public_path__ + \"static/media/realitio_header_logo.da16ed6c.png\";","export default __webpack_public_path__ + \"static/media/line_style.d0e8d16f.png\";","import { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport memoize from \"lodash.memoize\";\n\nconst { ethereum } = window as any;\nexport const getProvider = memoize(() => {\n  if (ethereum) {\n    return new ethers.providers.Web3Provider(ethereum, \"any\");\n  }\n  return ethers.getDefaultProvider();\n});\n\nexport const useProvider = () => {\n  const [provider] = useState<\n    ethers.providers.BaseProvider | ethers.providers.Web3Provider\n  >(() => getProvider());\n\n  return provider;\n};\n","import { useEffect, useState } from \"react\";\nimport { useProvider } from \"./useProvider\";\n\nexport function useChainId() {\n  const provider = useProvider();\n  const [chainId, setChainId] = useState<number | undefined>(\n    provider.network?.chainId\n  );\n\n  useEffect(() => {\n    provider.on(\"network\", (network) => {\n      setChainId(network.chainId);\n    });\n  }, [provider]);\n\n  return chainId;\n}\n","const labels: Record<number, string> = {\n  1: \"Main Ethereum Network\",\n  4: \"Rinkeby Test Network\",\n  5: \"Goerli Test Network\",\n  8: \"Ubiq Main Network\",\n  42: \"Kovan Test Network\",\n  56: \"Binance Smart Chain\",\n  77: \"Sokal Network\",\n  100: \"XDAI Network\",\n  137: \"Polygon Main Network (Matic)\",\n  80001: \"Polygon Mumbai Testnet\",\n  42161: \"Arbitrum One Network\",\n  421611: \"Arbitrum Rinkeby Test Network\",\n  123411710: \"Local Test Network\",\n};\n\nexport function getNetworkLabel(chainId: number) {\n  return labels[chainId] || \"Unknown Test Network\";\n}\n","import React from \"react\";\nimport \"./Header.css\";\nimport Logo from \"../../assets/images/realitio_header_logo.png\";\nimport DividerImg from \"../../assets/images/line_style.png\";\nimport { useChainId } from \"../../hooks/useChainId\";\nimport { getNetworkLabel } from \"../../helpers/network\";\nimport { Link } from \"react-router-dom\";\n\nexport const Header = () => {\n  const chainId = useChainId();\n  const label = chainId ? getNetworkLabel(chainId) : \"\";\n\n  return (\n    <div>\n      <header className=\"header-container\">\n        <div className=\"header-logo-container\">\n          <Link to=\"/\">\n            <img src={Logo} alt=\"Logo\" className=\"header-logo\" />\n          </Link>\n          <span className=\"network-text\">{label}</span>\n        </div>\n      </header>\n      <div\n        className=\"divider\"\n        style={{ backgroundImage: `url(${DividerImg})` }}\n      />\n    </div>\n  );\n};\n","import { ethers } from \"ethers\";\n\nconst REALITY_ETH_ABI_CONTRACT = [\n  \"event LogNewTemplate(uint256 indexed template_id, address indexed user, string question_text)\",\n  \"function createTemplate(string content) returns (uint256)\",\n];\n\nexport function getRealityETHContract(\n  address: string,\n  signer: ethers.Signer | ethers.providers.Provider\n) {\n  return new ethers.Contract(address, REALITY_ETH_ABI_CONTRACT, signer);\n}\n\nexport function getRealityETHVersion() {\n  return \"3.0\";\n}\n","import React from \"react\";\nimport \"./Box.css\";\n\nexport interface BoxProps {\n  title?: string;\n}\n\nexport const Box: React.FC<BoxProps> = ({ title, children }) => {\n  return (\n    <div className=\"box\">\n      {title ? (\n        <div className=\"box-title-container\">\n          <h3 className=\"box-title\">{title}</h3>\n        </div>\n      ) : null}\n      <div className=\"box-content\">{children}</div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./Spinner.css\";\n\nexport function Spinner() {\n  return <div className=\"spinner\" />;\n}\n","import React from \"react\";\nimport \"./Loader.css\";\nimport { Spinner } from \"../commons/Spinner/Spinner\";\nimport { Box, BoxProps } from \"../commons/Box/Box\";\n\ninterface LoaderProps {\n  title?: BoxProps[\"title\"];\n  text?: string;\n}\n\nexport const Loader = ({ title, text }: LoaderProps) => {\n  return (\n    <Box title={title}>\n      <div className=\"center-container\">\n        <div className=\"loader-container\">\n          <Spinner />\n          <span>{text}</span>\n        </div>\n      </div>\n    </Box>\n  );\n};\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport \"./TemplateBuilderCreate.css\";\nimport { useSigner } from \"../../../hooks/useSigner\";\nimport { getRealityETHContract } from \"../../../helpers/reality-eth-contract\";\nimport { BigNumber, ethers } from \"ethers\";\nimport { Box } from \"../../commons/Box/Box\";\nimport { TemplateData } from \"../TemplateBuilder\";\nimport { Loader } from \"../../Loader/Loader\";\n\ninterface TemplateBuilderCreateProps {\n  instance: string;\n  template: TemplateData;\n\n  onClose(): void;\n  onCreate(templateId: number): void;\n}\n\nasync function createTemplate(\n  signer: ethers.Signer,\n  realityETHInstance: string,\n  template: TemplateData\n) {\n  const contract = getRealityETHContract(realityETHInstance, signer);\n\n  const request = await contract.functions.createTemplate(\n    JSON.stringify(template)\n  );\n  const receipt = await request.wait();\n\n  const newTemplateEvent = receipt.events.find(\n    (event: any) => event.event === \"LogNewTemplate\"\n  );\n\n  if (!newTemplateEvent) {\n    throw new Error(\"Transaction did not fired the `LogNewTemplate` event.\");\n  }\n\n  return newTemplateEvent.args[0] as BigNumber; // Template Id\n}\n\nexport function TemplateBuilderCreate({\n  instance,\n  template,\n  onClose,\n  onCreate,\n}: TemplateBuilderCreateProps) {\n  const [error, setError] = useState(false);\n  const loading = useRef(false);\n  const { signer, connected, connect } = useSigner();\n\n  const handleError = useCallback(() => {\n    setError(true);\n    setTimeout(onClose, 3000);\n  }, [onClose]);\n\n  useEffect(() => {\n    if (!signer || !connected) {\n      connect().catch(() => handleError());\n      return;\n    }\n\n    if (!loading.current) {\n      loading.current = true;\n      createTemplate(signer, instance, template)\n        .then((templateId) => onCreate(templateId.toNumber()))\n        .catch(() => handleError());\n    }\n  }, [\n    connect,\n    connected,\n    handleError,\n    instance,\n    loading,\n    onCreate,\n    signer,\n    template,\n  ]);\n\n  if (error) {\n    return (\n      <Box title=\"Creating Template...\">\n        <div className=\"center-container\">\n          <h3 style={{ textAlign: \"center\" }}>Transaction Failed</h3>\n        </div>\n      </Box>\n    );\n  }\n\n  return <Loader title=\"Creating Template...\" text=\"Creating Template...\" />;\n}\n","import { useProvider } from \"./useProvider\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { ethers } from \"ethers\";\n\nexport function useSigner() {\n  const provider = useProvider();\n  const [connected, setConnected] = useState(false);\n  const [connecting, setConnecting] = useState(false);\n\n  const connect = useCallback(async () => {\n    if (provider instanceof ethers.providers.Web3Provider) {\n      setConnecting(true);\n      try {\n        await provider.send(\"eth_requestAccounts\", []);\n        setConnected(true);\n      } catch (error) {\n        setConnected(false);\n        throw error;\n      } finally {\n        setConnecting(false);\n      }\n    }\n  }, [provider]);\n\n  const signer = useMemo(() => {\n    if (provider instanceof ethers.providers.Web3Provider) {\n      return provider.getSigner();\n    }\n    return null;\n  }, [provider]);\n\n  useEffect(() => {\n    if (signer) {\n      signer\n        .getAddress()\n        .then(() => setConnected(true))\n        .catch(() => setConnected(false));\n    }\n  }, [signer]);\n\n  return { signer, connected, connect, connecting };\n}\n","import React, { HTMLProps, useEffect, useState } from \"react\";\nimport \"./Select.css\";\nimport classNames from \"classnames\";\n\nexport type Option<T> = { label: string; value: T };\nexport interface SelectProps<T>\n  extends Omit<HTMLProps<HTMLDivElement>, \"value\" | \"onChange\"> {\n  label: string;\n  value?: T;\n  onChange: (value: T) => void;\n  containerProps?: React.HTMLProps<HTMLDivElement>;\n  labelProps?: Omit<React.HTMLProps<HTMLLabelElement>, \"htmlFor\">;\n  options: Option<T>[];\n}\n\nexport function Select<T>({\n  label,\n  value,\n  options,\n  onChange,\n  className,\n  disabled,\n  ...props\n}: SelectProps<T>) {\n  const [index, setIndex] = useState(() =>\n    options.findIndex((option) => option.value === value)\n  );\n\n  useEffect(() => {\n    const _index = options.findIndex((option) => option.value === value);\n    if (index !== _index && value) {\n      setIndex(_index);\n      onChange(value);\n    }\n  }, [index, onChange, options, value]);\n\n  const handleSelect = (index: string) => {\n    const i = parseInt(index);\n    const { value } = options[i];\n    setIndex(i);\n    onChange(value);\n  };\n\n  const getLabel = (index: number) => {\n    const option = options[index];\n    if (!option) return value;\n    return option.label;\n  };\n\n  return (\n    <div\n      {...props}\n      className={classNames(\n        \"custom-select-container\",\n        { \"select-disabled\": disabled },\n        className\n      )}\n    >\n      <span\n        className={classNames(\"custom-select-label\", {\n          \"custom-select-selected\": value,\n        })}\n      >\n        {label}: {value ? getLabel(index) : null}\n      </span>\n      <select\n        disabled={disabled}\n        className=\"custom-select\"\n        value={index}\n        onChange={(e) => handleSelect(e.target.value)}\n      >\n        {options.map((option, index) => (\n          <option key={index} value={index}>\n            {option.label}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n}\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCopy(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M9 6V4.5C9 2.84315 10.3431 1.5 12 1.5H19.5C21.1569 1.5 22.5 2.84315 22.5 4.5V15C22.5 16.6569 21.1569 18 19.5 18H15V19.5C15 21.1569 13.6569 22.5 12 22.5H4.5C2.84315 22.5 1.5 21.1569 1.5 19.5V9C1.5 7.34315 2.84315 6 4.5 6H9ZM15 15H19.5V4.5H12V6C13.6569 6 15 7.34315 15 9V15ZM4.5 19.5V9H12V19.5H4.5Z\",\n    fill: \"#B2B5B2\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCopy);\nexport default __webpack_public_path__ + \"static/media/copy.cb0a413b.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport \"./Input.css\";\nimport classNames from \"classnames\";\n\ninterface InputProps extends React.HTMLProps<HTMLInputElement> {\n  error?: string;\n}\n\nexport const Input = ({\n  className,\n  disabled,\n  label,\n  error,\n  ...props\n}: InputProps) => {\n  const input = (\n    <div\n      className={classNames(\n        \"custom-input\",\n        { \"custom-input-disabled\": disabled, \"input-error\": error },\n        className\n      )}\n    >\n      {label ? <span>{label}:</span> : null}\n      <input type=\"text\" disabled={disabled} {...props} />\n    </div>\n  );\n\n  if (error)\n    return (\n      <>\n        {input}\n        <span className=\"custom-input-error-text\">{error}</span>\n      </>\n    );\n\n  return input;\n};\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { Select } from \"../../commons/Select/Select\";\nimport \"./InstanceField.css\";\nimport { Input } from \"../../commons/Input/Input\";\nimport { chainTokenList, realityETHConfig } from \"@reality.eth/contracts\";\nimport { useChainId } from \"../../../hooks/useChainId\";\nimport { getRealityETHVersion } from \"../../../helpers/reality-eth-contract\";\nimport { ReactComponent as CopyIcon } from \"../../../assets/icons/copy.svg\";\nimport { copyTextToClipboard } from \"../../../helpers/text\";\n\ninterface InstanceFieldProps {\n  disabled?: boolean;\n  value?: string;\n  onChange(address: string): void;\n}\n\nfunction getRealityETHInstances(chain_id: number) {\n  const tokensDetails = chainTokenList(chain_id);\n  const tokens = Object.keys(tokensDetails);\n  return tokens\n    .map((token) => ({\n      ...realityETHConfig(chain_id, token, getRealityETHVersion()),\n      token,\n    }))\n    .filter((token) => token.address);\n}\n\nexport function InstanceField({\n  onChange,\n  value,\n  disabled,\n}: InstanceFieldProps) {\n  const chainId = useChainId();\n\n  const options = useMemo(() => {\n    return getRealityETHInstances(chainId || 1).map((instance) => ({\n      label: `${instance.token} - ${instance.address}`,\n      value: instance.address,\n    }));\n  }, [chainId]);\n\n  const [instance, setInstance] = useState(\n    () => value || (options[0] && options[0].value)\n  );\n  const [custom, setCustom] = useState(!options.length);\n\n  const handleChange = useCallback(\n    (_value: string) => {\n      setInstance(_value);\n      onChange(_value);\n    },\n    [onChange]\n  );\n\n  useEffect(() => {\n    if (options.length) {\n      const exists = options.some((option) => option.value === instance);\n      if (!exists) setInstance(options[0].value);\n    }\n  }, [instance, options]);\n\n  useEffect(() => {\n    if (!value && instance) {\n      onChange(instance);\n    }\n  }, [instance, onChange, value]);\n\n  const handleCustomChange = (custom: boolean) => {\n    setCustom(custom);\n    if (!custom) {\n      setInstance(options[0].value);\n      onChange(options[0].value);\n    }\n  };\n\n  const handleCopyInstance = () => {\n    copyTextToClipboard(instance);\n  };\n\n  if (custom) {\n    return (\n      <div className=\"instance-field\">\n        <Input\n          disabled={disabled}\n          label=\"Reality Instance\"\n          value={value}\n          placeholder=\"Reality.eth Instance Address (0x123...)\"\n          onChange={(event) => handleChange(event.currentTarget.value)}\n        />\n        {disabled ? null : (\n          <button\n            onClick={() => handleCustomChange(false)}\n            className=\"link-button custom-instance-button\"\n          >\n            Use Default Instance\n          </button>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"instance-field\">\n      <Select\n        disabled={disabled}\n        label=\"Reality Instance\"\n        value={instance}\n        onChange={(instance) => handleChange(instance)}\n        options={options}\n      />\n      {disabled ? (\n        <CopyIcon className=\"copy-btn\" onClick={handleCopyInstance} />\n      ) : (\n        <button\n          onClick={() => handleCustomChange(true)}\n          className=\"link-button custom-instance-button\"\n        >\n          Add Custom Instance\n        </button>\n      )}\n    </div>\n  );\n}\n","export function copyTextToClipboard(text: string): void {\n  const listener = (e: ClipboardEvent): void => {\n    e.preventDefault();\n    if (e.clipboardData) {\n      e.clipboardData.setData(\"text/plain\", text);\n    }\n  };\n\n  const range = document.createRange();\n\n  const documentSelection = document.getSelection();\n  if (!documentSelection) {\n    return;\n  }\n\n  range.selectNodeContents(document.body);\n  documentSelection.addRange(range);\n  document.addEventListener(\"copy\", listener);\n  document.execCommand(\"copy\");\n  document.removeEventListener(\"copy\", listener);\n  documentSelection.removeAllRanges();\n}\n","import React from \"react\";\nimport \"./Button.css\";\nimport classNames from \"classnames\";\n\ntype ButtonProps = React.DetailedHTMLProps<\n  React.ButtonHTMLAttributes<HTMLButtonElement>,\n  HTMLButtonElement\n>;\n\nexport const Button = ({ className, ...props }: ButtonProps) => {\n  return <button className={classNames(\"custom-btn\", className)} {...props} />;\n};\n","import React from \"react\";\nimport { Select, SelectProps } from \"../Select/Select\";\nimport languages from \"./languages.json\";\n\nexport type Language = keyof typeof languages;\n\nconst options = Object.entries(languages).map(([lan, name]) => {\n  return {\n    label: name,\n    value: lan as Language,\n  };\n});\n\ntype LanguageFieldProps = Omit<SelectProps<Language>, \"label\" | \"options\">;\n\nexport function LanguageField(props: LanguageFieldProps) {\n  return <Select label=\"Language\" options={options} {...props} />;\n}\n","import React, { useState } from \"react\";\nimport { Input } from \"../../commons/Input/Input\";\nimport { TemplateFormProps } from \"../TemplateForm/TemplateForm\";\nimport { validateName } from \"@ensdomains/ui/src/utils/index\";\n\nfunction getTitleForDaoModuleTemplate(ens: string) {\n  return (\n    \"Did the Snapshot proposal with the id %s in the \" +\n    `${ens} space pass the execution of the array of Module transactions ` +\n    \"that have the hash 0x%s and does it meet the requirements of the document \" +\n    `referenced in the dao requirements record at ${ens}? The hash is ` +\n    \"the keccak of the concatenation of the individual EIP-712 hashes of \" +\n    \"the Module transactions. If this question was asked before the corresponding \" +\n    \"Snapshot proposal was resolved, it should ALWAYS be resolved to INVALID!\"\n  );\n}\n\nfunction validate(value: string) {\n  try {\n    return validateName(value).length;\n  } catch (err) {\n    return false;\n  }\n}\n\nexport const DaoModuleTemplateForm = ({\n  onChange,\n  disabled,\n}: TemplateFormProps) => {\n  const [ENS, setENS] = useState<string>(\"\");\n  const [error, setError] = useState(false);\n\n  const handleENSChange = (value: string) => {\n    setENS(value);\n    if (!value) {\n      onChange(undefined);\n      setError(false);\n      return;\n    }\n    if (!validate(value)) {\n      onChange(undefined);\n      setError(true);\n      return;\n    }\n    setError(false);\n    onChange({\n      type: \"bool\",\n      category: \"DAO proposal\",\n      title: getTitleForDaoModuleTemplate(value.trim()),\n    });\n  };\n\n  return (\n    <Input\n      disabled={disabled}\n      value={ENS}\n      error={error ? \"Invalid ENS\" : \"\"}\n      className={\"input-space\"}\n      placeholder=\"ENS Name\"\n      onChange={(event) => handleENSChange(event.currentTarget.value)}\n    />\n  );\n};\n","import React from \"react\";\nimport \"./Textarea.css\";\n\nexport const Textarea = ({\n  className,\n  ...props\n}: React.HTMLProps<HTMLTextAreaElement>) => {\n  return <textarea {...props} className={`custom-textarea ${className}`} />;\n};\n","import React, { useState } from \"react\";\nimport { Option, Select } from \"../../commons/Select/Select\";\nimport { Textarea } from \"../../commons/Textarea/Textarea\";\nimport { TemplateData, Type } from \"../../TemplateBuilder/TemplateBuilder\";\nimport { TemplateFormProps } from \"../TemplateForm/TemplateForm\";\nimport { Input } from \"../../commons/Input/Input\";\n\nconst typeOptions: Option<Type>[] = [\n  { value: \"bool\", label: \"Bool\" },\n  { value: \"uint\", label: \"Uint\" },\n  { value: \"datetime\", label: \"Date/Time\" },\n  { value: \"single-select\", label: \"Single Select\" },\n  { value: \"multiple-select\", label: \"Multiple Select\" },\n];\n\ntype PartialTemplateData = Omit<TemplateData, \"lang\">;\n\nexport function getTypes(type: string) {\n  return {\n    isSelect: type === \"single-select\" || type === \"multiple-select\",\n    isInt: type === \"uint\",\n  };\n}\n\nfunction parseOutcomes(value: string): string[] {\n  return value.trim()\n    ? value\n        .split(\",\")\n        .map((v) => v.trim())\n        .filter((v) => v)\n    : [];\n}\n\nexport const CustomTemplateForm = ({\n  onChange,\n  disabled,\n  template,\n}: TemplateFormProps) => {\n  const [type, setType] = useState<Type>(template?.type || \"bool\");\n  const [category, setCategory] = useState(template?.category || \"\");\n  const [title, setTitle] = useState(template?.title || \"\");\n  const [outcomes, setOutcomes] = useState<string>(\n    template?.outcomes?.join(\",\") || \"\"\n  );\n  const [decimals, setDecimals] = useState<number>(template?.decimals || 18);\n\n  const handleChange = (field: keyof PartialTemplateData, value: any) => {\n    const _type = field === \"type\" ? value : type;\n    const { isInt, isSelect } = getTypes(_type);\n\n    const data: PartialTemplateData = {\n      ...template,\n      type,\n      category,\n      title,\n      outcomes: isSelect ? parseOutcomes(outcomes) : undefined,\n      decimals: isInt ? decimals : undefined,\n      [field]: value,\n    };\n    onChange(data);\n  };\n\n  const handleCategoryChange = (category: string) => {\n    setCategory(category);\n    handleChange(\"category\", category);\n  };\n\n  const handleTypeChange = (type: Type) => {\n    setType(type);\n    handleChange(\"type\", type);\n  };\n\n  const handleTitleChange = (title: string) => {\n    setTitle(title);\n    handleChange(\"title\", title);\n  };\n\n  const handleDecimalsChange = (value: string) => {\n    const decimals = parseInt(value);\n    if (isNaN(decimals)) return;\n    setDecimals(decimals);\n    handleChange(\"decimals\", decimals);\n  };\n\n  const handleOutcomesChange = (value: string) => {\n    setOutcomes(value);\n    const _outcomes = parseOutcomes(value);\n    handleChange(\"outcomes\", _outcomes);\n  };\n\n  const { isInt, isSelect } = getTypes(type);\n\n  return (\n    <>\n      <Input\n        disabled={disabled}\n        label=\"Category\"\n        value={category}\n        onChange={(evt) => handleCategoryChange(evt.currentTarget.value)}\n        className=\"input-space\"\n      />\n      <Select\n        disabled={disabled}\n        label=\"Type\"\n        value={type}\n        onChange={handleTypeChange}\n        options={typeOptions}\n        className=\"input-space\"\n      />\n\n      {isInt ? (\n        <Input\n          disabled={disabled}\n          label=\"Decimals\"\n          value={decimals}\n          onChange={(evt) => handleDecimalsChange(evt.currentTarget.value)}\n          className=\"input-space\"\n        />\n      ) : null}\n      {isSelect ? (\n        <Input\n          disabled={disabled}\n          label=\"Outcomes\"\n          value={outcomes}\n          onChange={(evt) => handleOutcomesChange(evt.currentTarget.value)}\n          className=\"input-space\"\n        />\n      ) : null}\n\n      <Textarea\n        disabled={disabled}\n        value={title}\n        rows={5}\n        className=\"input-space\"\n        placeholder=\"Did the Olympian with the name %s win gold?\"\n        onChange={(evt) => handleTitleChange(evt.currentTarget.value)}\n      />\n    </>\n  );\n};\n","import React from \"react\";\nimport {\n  TemplateData,\n  TemplateType,\n} from \"../../TemplateBuilder/TemplateBuilder\";\nimport { DaoModuleTemplateForm } from \"../DaoModuleTemplateForm/DaoModuleTemplateForm\";\nimport { CustomTemplateForm } from \"../CustomTemplateForm/CustomTemplateForm\";\n\nexport interface TemplateFormProps {\n  disabled?: boolean;\n  type: TemplateType;\n  template?: TemplateData;\n  onChange(form?: Omit<TemplateData, \"lang\">): void;\n}\n\nexport function TemplateForm(props: TemplateFormProps) {\n  if (props.type === \"reality\") return <DaoModuleTemplateForm {...props} />;\n\n  return <CustomTemplateForm {...props} />;\n}\n","import React from \"react\";\nimport \"./TextBlock.css\";\nimport classNames from \"classnames\";\nimport { HTMLProps } from \"react\";\n\ntype TextBlockProps = HTMLProps<HTMLDivElement>;\n\nexport function TextBlock({ className, ...props }: TextBlockProps) {\n  return <div className={classNames(\"text-block\", className)} {...props} />;\n}\n","import { TemplateData } from \"../components/TemplateBuilder/TemplateBuilder\";\nimport { isAddress } from \"ethers/lib/utils\";\nimport { getTypes } from \"../components/forms/CustomTemplateForm/CustomTemplateForm\";\n\nexport function validateTemplateData(\n  instance?: string,\n  template?: TemplateData\n): boolean {\n  if (\n    !(\n      instance &&\n      isAddress(instance) &&\n      template &&\n      template.type &&\n      template.category &&\n      template.title\n    )\n  )\n    return false;\n\n  const { isInt, isSelect } = getTypes(template.type);\n\n  if (isInt) {\n    return !!(template?.decimals && !isNaN(template.decimals));\n  }\n\n  if (isSelect) {\n    return !!template?.outcomes?.length;\n  }\n\n  return true;\n}\n","import React, { useCallback } from \"react\";\nimport { Box } from \"../../commons/Box/Box\";\nimport \"./TemplateBuilderForm.css\";\nimport { Option, Select } from \"../../commons/Select/Select\";\nimport { InstanceField } from \"../../forms/InstanceForm/InstanceField\";\nimport { Button } from \"../../commons/Button/Button\";\nimport {\n  Language,\n  LanguageField,\n} from \"../../commons/LanguageField/LanguageField\";\nimport { TemplateForm } from \"../../forms/TemplateForm/TemplateForm\";\nimport { TextBlock } from \"../../commons/TextBlock/TextBlock\";\nimport { TemplateData, TemplateType } from \"../TemplateBuilder\";\nimport { validateTemplateData } from \"../../../helpers/validation\";\n\nexport type TemplateBuilderFormFields =\n  | \"instance\"\n  | \"language\"\n  | \"type\"\n  | \"template\";\n\nconst templateTypeOptions: Option<TemplateType>[] = [\n  { label: \"Custom\", value: \"custom\" },\n  { label: \"Zodiac Reality Module\", value: \"reality\" },\n];\n\ninterface TemplateBuilderFormProps {\n  id?: number;\n  lang?: Language;\n  instance?: string;\n  template?: TemplateData;\n  type?: TemplateType;\n\n  onChange?(field: TemplateBuilderFormFields, value: any): void;\n  onSubmit?(): void;\n}\n\nexport const TemplateBuilderForm = ({\n  id,\n  lang,\n  type = \"custom\",\n  instance,\n  template,\n  onChange,\n  onSubmit,\n}: TemplateBuilderFormProps) => {\n  const disabled = id !== undefined;\n  const title = disabled ? `Template: ${id}` : \"Template Builder\";\n  const isValid = validateTemplateData(instance, template);\n\n  const handleChange = useCallback(\n    (field: TemplateBuilderFormFields) => (value: any) => {\n      if (onChange) onChange(field, value);\n    },\n    [onChange]\n  );\n\n  return (\n    <Box title={title}>\n      <div className=\"template-builder-content\">\n        <InstanceField\n          disabled={disabled}\n          value={instance}\n          onChange={handleChange(\"instance\")}\n        />\n        <Select\n          disabled={disabled}\n          label=\"Template Type\"\n          value={type}\n          onChange={handleChange(\"type\")}\n          options={templateTypeOptions}\n          className=\"input-space\"\n        />\n\n        <LanguageField\n          disabled={disabled}\n          value={lang || template?.lang}\n          onChange={handleChange(\"language\")}\n          className=\"input-space\"\n        />\n\n        <TemplateForm\n          disabled={disabled}\n          type={type}\n          template={template}\n          onChange={handleChange(\"template\")}\n        />\n\n        {template && isValid ? (\n          <TextBlock className=\"input-space\">\n            {JSON.stringify(template, undefined, 4)}\n          </TextBlock>\n        ) : null}\n\n        {disabled ? null : (\n          <Button\n            disabled={!isValid}\n            onClick={onSubmit}\n            className=\"input-space\"\n          >\n            Create Template\n          </Button>\n        )}\n      </div>\n    </Box>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Language } from \"../commons/LanguageField/LanguageField\";\nimport { base_ids } from \"@reality.eth/contracts/config/templates.json\";\nimport { TemplateBuilderCreate } from \"./TemplateBuilderCreate/TemplateBuilderCreate\";\nimport {\n  TemplateBuilderForm,\n  TemplateBuilderFormFields,\n} from \"./TemplateBuilderForm/TemplateBuilderForm\";\nimport { validateTemplateData } from \"../../helpers/validation\";\nimport { useParams } from \"react-router-dom\";\n\nexport type TemplateType = \"custom\" | \"reality\";\nexport const TEMPLATE_TYPES: TemplateType[] = [\"custom\", \"reality\"];\n\nexport type Type = keyof typeof base_ids;\n\nexport interface TemplateData {\n  type: Type;\n  title: string;\n  category: string;\n  lang: Language;\n\n  decimals?: number;\n  outcomes?: string[];\n}\n\nfunction isTemplateType(type: string): type is TemplateType {\n  return TEMPLATE_TYPES.includes(type as TemplateType);\n}\n\nexport const TemplateBuilder = () => {\n  const { type: selectedType } = useParams<{ type: string }>();\n\n  const [create, setCreate] = useState(false);\n  const [instance, setInstance] = useState<string>();\n  const [language, setLanguage] = useState<Language>(\"en\");\n  const [templateId, setTemplateId] = useState<number>();\n  const [templateData, setTemplateData] = useState<TemplateData>();\n  const [templateType, setTemplateType] = useState<TemplateType>(() => {\n    if (selectedType && isTemplateType(selectedType)) return selectedType;\n    return \"custom\";\n  });\n\n  const handleFormData = (data?: Omit<TemplateData, \"lang\">) => {\n    if (!data) {\n      setTemplateData(undefined);\n      return;\n    }\n    setTemplateData({ lang: language, ...data });\n  };\n  const handleClose = () => {\n    setCreate(false);\n    setTemplateData(undefined);\n  };\n  const handleCreation = (templateId: number) => {\n    setTemplateType(\"custom\");\n    setTemplateId(templateId);\n  };\n  const handleSubmit = () => {\n    if (!validateTemplateData(instance, templateData)) {\n      return;\n    }\n    setCreate(true);\n  };\n\n  const handleChange = (field: TemplateBuilderFormFields, value: any) => {\n    switch (field) {\n      case \"instance\":\n        setInstance(value);\n        break;\n      case \"type\":\n        setTemplateType(value);\n        setTemplateData(undefined);\n        break;\n      case \"language\":\n        setLanguage(value);\n        if (templateData) {\n          const template = { ...templateData };\n          template.lang = value; // Avoid changing fields order.\n          setTemplateData(template);\n        }\n        break;\n      case \"template\":\n        handleFormData(value);\n        break;\n    }\n  };\n\n  if (instance && templateData && create && !templateId) {\n    return (\n      <TemplateBuilderCreate\n        instance={instance}\n        template={templateData}\n        onClose={handleClose}\n        onCreate={handleCreation}\n      />\n    );\n  }\n\n  return (\n    <TemplateBuilderForm\n      id={templateId}\n      lang={language}\n      type={templateType}\n      instance={instance}\n      template={templateData}\n      onSubmit={handleSubmit}\n      onChange={handleChange}\n    />\n  );\n};\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { realityETHConfig } from \"@reality.eth/contracts\";\nimport { Loader } from \"../Loader/Loader\";\nimport { useChainId } from \"../../hooks/useChainId\";\nimport { getNetworkLabel } from \"../../helpers/network\";\nimport {\n  getRealityETHContract,\n  getRealityETHVersion,\n} from \"../../helpers/reality-eth-contract\";\nimport { useProvider } from \"../../hooks/useProvider\";\nimport { BigNumber } from \"ethers\";\nimport { TemplateData } from \"../TemplateBuilder/TemplateBuilder\";\nimport { TemplateBuilderForm } from \"../TemplateBuilder/TemplateBuilderForm/TemplateBuilderForm\";\n\ninterface TemplateDetailsParams {\n  id: string;\n  chainId: string;\n  token: string;\n}\n\nexport function TemplateDetails() {\n  const history = useHistory();\n  const provider = useProvider();\n  const currentChainId = useChainId();\n  const [template, setTemplate] = useState<TemplateData>();\n\n  const { id, token, chainId: _chainId } = useParams<TemplateDetailsParams>();\n  const chainId = parseInt(_chainId);\n\n  const isCorrectChain = chainId === currentChainId;\n\n  const realityInstance = useMemo(() => {\n    try {\n      return realityETHConfig(chainId, token, getRealityETHVersion());\n    } catch (err) {\n      return undefined;\n    }\n  }, [chainId, token]);\n\n  useEffect(() => {\n    if (isNaN(parseInt(id)) || !realityInstance) {\n      history.replace(\"/\");\n    }\n  }, [history, id, realityInstance]);\n\n  useEffect(() => {\n    if (isCorrectChain && realityInstance) {\n      const contract = getRealityETHContract(realityInstance.address, provider);\n      const filters = contract.filters.LogNewTemplate(BigNumber.from(id));\n      contract\n        .queryFilter(filters)\n        .then((events) => {\n          if (!events.length) {\n            history.replace(\"/\");\n            return;\n          }\n          let { question_text } = events[0].args as any;\n          question_text = question_text.replace(\n            '\"outcomes\": [%s]',\n            '\"outcomes\": [\"%s\"]'\n          ); // Special Case for Default Cases\n          const template = JSON.parse(question_text) as TemplateData;\n          setTemplate(template);\n        })\n        .catch(() => history.replace(\"/\"));\n    }\n  }, [\n    id,\n    history,\n    chainId,\n    provider,\n    currentChainId,\n    isCorrectChain,\n    realityInstance,\n  ]);\n\n  if (!isCorrectChain) {\n    const networkLabel = getNetworkLabel(chainId).toLowerCase();\n    return (\n      <Loader\n        text={`Please change your current network to the ${networkLabel}`}\n      />\n    );\n  }\n\n  if (template) {\n    return <TemplateBuilderForm id={parseInt(id)} template={template} />;\n  }\n\n  return <Loader />;\n}\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { TemplateBuilder } from \"./TemplateBuilder/TemplateBuilder\";\nimport { TemplateDetails } from \"./TemplateDetails/TemplateDetails\";\n\nexport function Views() {\n  return (\n    <Switch>\n      <Route path=\"/template/:chainId/:token/:id\" component={TemplateDetails} />\n      <Route path=\"/type/:type\" component={TemplateBuilder} />\n      <Route path=\"/\" component={TemplateBuilder} />\n    </Switch>\n  );\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport { Header } from \"../Header/Header\";\nimport { Views } from \"../Views\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"app-container\">\n        <Header />\n        <Views />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}